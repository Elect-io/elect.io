{"version":3,"file":"static/js/644.70e5f68d.chunk.js","mappings":"2NAKMA,EAAe,SAACC,GAClB,MAAwBC,EAAAA,SAAeD,GAAvC,eAAKE,EAAL,KAAYC,EAAZ,KACA,OAAQ,iBAAKC,UAAU,wBAAf,WACJ,qBAAUC,YAAY,WAAWC,SAAU,SAACC,GAAD,OAAOJ,GAAS,SAAAD,GAAK,yBAAUA,GAAV,IAAiBM,SAAUD,EAAEE,OAAOC,YAAWA,MAAOR,EAAMM,YAAqB,qBAAQ,qBACzJ,kBAAOH,YAAY,OAAOC,SAAU,SAACC,GAAD,OAAOJ,GAAS,SAAAD,GAAK,yBAAUA,GAAV,IAAiBS,KAAMJ,EAAEE,OAAOC,YAAWA,MAAOR,EAAMS,QACjH,mBAAQC,SAAO,uBAAE,4GAEaC,IAAAA,IAAA,0CAA6CX,EAAMY,KAAOZ,GAFvE,6DAMTa,QAAQC,IAAR,MANS,wDAAjB,mBASA,mBAAQJ,SAAO,uBAAE,4GAEaC,IAAAA,OAAA,0CAAgDX,EAAMY,MAFnE,cAGTd,EAAMiB,SAHG,gDAMTF,QAAQC,IAAR,MANS,yDAAjB,wBAiER,UArD8B,SAAChB,GAC3B,IAAQkB,GAAOC,EAAAA,EAAAA,MAAPD,IACRE,EAAAA,EAAAA,YAAU,YACN,uBAAC,yGACyBP,IAAAA,IAAA,0CAA6CK,IADtE,OACOG,EADP,OAEGlB,GAAS,SAAAD,GAAK,yBAAUA,GAAV,IAAiBmB,UAAWA,EAAUC,KAAKD,eAF5D,0CAAD,KAID,IACH,MAAwBpB,EAAAA,SAAe,CACnCsB,YAAa,CACTf,SAAU,GAAIgB,aAAc,GAAIC,aAAc,GAAId,KAAM,IACzDU,UAAW,KAHlB,eAAKnB,EAAL,KAAYC,EAAZ,KAKA,OAAQ,iBAAKC,UAAU,iBAAf,WACJ,iBAAKA,UAAU,2BAAf,WACI,yBACI,+CAEJ,kBAAMsB,SAAQ,yCAAE,WAAOnB,GAAP,mFACZA,EAAEoB,iBACFZ,QAAQC,IAAId,EAAMqB,aAFN,kBAIaV,IAAAA,KAAA,0CAA8CK,GAAMhB,EAAMqB,aAJvE,OAIJf,EAJI,OAKRL,GAAS,SAAAD,GAAK,yBAAUA,GAAV,IAAiBmB,UAAU,GAAD,eAAMnB,EAAMmB,WAAZ,CAAuBb,EAASc,KAAKM,mBAAmBL,YAAa,CAAEf,SAAU,GAAIgB,aAAc,GAAIC,aAAc,GAAId,KAAM,SAL/J,gDAQRI,QAAQC,IAAR,MARQ,yDAAF,sDAAd,WAWI,iBAAKZ,UAAU,wBAAf,WACI,qBAAUM,MAAOR,EAAMqB,YAAYf,SAAUF,SAAU,SAACC,GAAD,OAAOJ,GAAS,SAAAD,GAAK,yBAAUA,GAAV,IAAiBqB,aAAY,kBAAMrB,EAAMqB,aAAb,IAA0Bf,SAAUD,EAAEE,OAAOC,cAAaL,YAAY,cAC9K,oBAFJ,MAEc,qBACV,qBACA,qBACA,kBAAOK,MAAOR,EAAMqB,YAAYZ,KAAML,SAAU,SAACC,GAAD,OAAOJ,GAAS,SAAAD,GAAK,yBAAUA,GAAV,IAAiBqB,aAAY,kBAAMrB,EAAMqB,aAAb,IAA0BZ,KAAMJ,EAAEE,OAAOC,cAAaL,YAAY,aAGvK,8CAGR,iBAAKD,UAAU,2BAAf,WACI,2CACCF,EAAMmB,UAAUQ,KAAI,SAACrB,EAAUsB,GAC5B,OAAQ,SAAC/B,GAAD,kBAA8BS,GAA9B,IAAwCS,OAAQ,WACpDd,GAAS,SAAAD,GAAK,yBAAUA,GAAV,IAAiBmB,UAAWnB,EAAMmB,UAAUU,QAAO,SAACC,EAAGC,GAAJ,OAAUA,IAAMH,aAD1DA","sources":["components/moderator/questions/editElectionSpecificQuestions.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport axios from 'axios';\r\n\r\nconst EachQuestion = (props) => {\r\n    let [state, setState] = React.useState(props);\r\n    return (<div className='edit-questions-create'>\r\n        <textarea placeholder='question' onChange={(e) => setState(state => ({ ...state, question: e.target.value }))} value={state.question}></textarea><span /><span />\r\n        <input placeholder='hook' onChange={(e) => setState(state => ({ ...state, hook: e.target.value }))} value={state.hook}></input>\r\n        <button onClick={async () => {\r\n            try {\r\n                const request = await axios.put(`/api/election-specific-question/${state._id}`, state);\r\n            }\r\n\r\n            catch (err) {\r\n                console.log(err)\r\n            }\r\n        }}>Save</button>\r\n        <button onClick={async () => {\r\n            try {\r\n                const request = await axios.delete(`/api/election-specific-question/${state._id}`);\r\n                props.delete()\r\n            }\r\n            catch (err) {\r\n                console.log(err)\r\n            }\r\n        }}>Delete</button>\r\n    </div>)\r\n}\r\n\r\nconst EditElectionQuestions = (props) => {\r\n    const { id } = useParams();\r\n    useEffect(() => {\r\n        (async () => {\r\n            let questions = await axios.get(`/api/election-specific-question/${id}`);\r\n            setState(state => ({ ...state, questions: questions.data.questions }))\r\n        })()\r\n    }, [])\r\n    let [state, setState] = React.useState({\r\n        newQuestion: {\r\n            question: '', xCoefficient: '', yCoefficient: '', hook: ''\r\n        }, questions: []\r\n    });\r\n    return (<div className='edit-questions'>\r\n        <div className='edit-questions-container'>\r\n            <h2>\r\n                <h2>Create Question</h2>\r\n            </h2>\r\n            <form onSubmit={async (e) => {\r\n                e.preventDefault();\r\n                console.log(state.newQuestion)\r\n                try {\r\n                    let question = await axios.post(`/api/election-specific-question/${id}`, state.newQuestion);\r\n                    setState(state => ({ ...state, questions: [...state.questions, question.data.questionInstance], newQuestion: { question: '', xCoefficient: '', yCoefficient: '', hook: '' } }))\r\n                }\r\n                catch (err) {\r\n                    console.log(err);\r\n                }\r\n            }}>\r\n                <div className='edit-questions-create'>\r\n                    <textarea value={state.newQuestion.question} onChange={(e) => setState(state => ({ ...state, newQuestion: { ...state.newQuestion, question: e.target.value } }))} placeholder='Question'></textarea>\r\n                    <span />  <span />\r\n                    <span />\r\n                    <span />\r\n                    <input value={state.newQuestion.hook} onChange={(e) => setState(state => ({ ...state, newQuestion: { ...state.newQuestion, hook: e.target.value } }))} placeholder='hook'></input>\r\n\r\n                </div>\r\n                <button>Create</button>\r\n            </form>\r\n        </div>\r\n        <div className='edit-questions-container'>\r\n            <h2>Edit Questions</h2>\r\n            {state.questions.map((question, index) => {\r\n                return (<EachQuestion key={index} {...question} delete={() => {\r\n                    setState(state => ({ ...state, questions: state.questions.filter((q, i) => i !== index) }))\r\n                }} />)\r\n            })}\r\n\r\n        </div>\r\n    </div>)\r\n}\r\n\r\n\r\nexport default EditElectionQuestions\r\n"],"names":["EachQuestion","props","React","state","setState","className","placeholder","onChange","e","question","target","value","hook","onClick","axios","_id","console","log","delete","id","useParams","useEffect","questions","data","newQuestion","xCoefficient","yCoefficient","onSubmit","preventDefault","questionInstance","map","index","filter","q","i"],"sourceRoot":""}