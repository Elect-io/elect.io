{"version":3,"file":"static/js/865.78524d0e.chunk.js","mappings":"qOA+EA,WAAeA,EAAAA,EAAAA,KAAQ,SAACC,GAAY,MAAO,CAAEA,MAAOA,MALhC,SAACC,GACjB,MAAO,CACHC,MAAM,WAAD,8BAAE,WAAOC,GAAP,uFAAyBC,EAAAA,EAAAA,IAAYH,EAAUE,GAA/C,mFAAF,mDAAC,MAGd,EAtEsB,SAACE,GACnB,MAA0BC,EAAAA,SAAe,CACrCC,SAAU,GAAIC,gBAAiB,GAAIC,QAAQ,EAAOC,KAAM,GAAIC,QAAS,KADzE,eAAOX,EAAP,KAAcY,EAAd,KAGA,EAA0BN,EAAAA,SAAe,IAAzC,eAAOO,EAAP,KAAcC,EAAd,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,IACRE,EAAAA,EAAAA,YAAU,YACN,uBAAC,8GACmCC,EAAAA,EAAAA,IAASH,GAD5C,gBACWL,EADX,EACWA,KAAMC,EADjB,EACiBA,QACdC,GAAS,SAAAZ,GAAK,yBAAUA,GAAV,IAAiBU,KAAAA,EAAMC,QAAAA,EAASF,QAAQ,OAFzD,0CAAD,KAID,IAEH,IAAMU,GAAWC,EAAAA,EAAAA,MAEXC,EAAQ,yCAAG,WAAOC,GAAP,yEACbA,EAAEC,mBACEvB,EAAMO,SAASiB,OAAS,GAFf,uBAGTV,EAAS,uDAHA,6BAMTd,EAAMO,WAAaP,EAAMQ,gBANhB,uBAOTM,EAAS,+BAPA,oDAWHT,EAAMH,MAAM,CAAEK,SAAUP,EAAMO,SAAUQ,GAAAA,IAXrC,QAYTI,EAAS,KAZA,kDAeTL,EAAS,EAAD,IAfC,0DAAH,sDAmBRW,EAAW,SAACH,GACdV,GAAS,SAAAZ,GAAK,yBAAUA,GAAV,cAAkBsB,EAAEI,OAAOC,KAAOL,EAAEI,OAAOE,YAG7D,OADAC,QAAQC,IAAIzB,EAAML,OACbA,EAAMS,QAGH,iBAAKsB,UAAU,OAAf,WACJ,eAAIA,UAAU,cAAd,6BACA,kBAAMV,SAAUA,EAAUU,UAAU,YAAYC,aAAa,KAA7D,WAEI,cAAGD,UAAU,oBAAb,mCACA,iBAAKA,UAAU,iBAAf,WACI,gBAAKE,IAAKjC,EAAMW,QAAQuB,QAASC,IAAKnC,EAAMW,QAAQgB,QACpD,uBAAI3B,EAAMW,QAAQgB,WAEtB,iBAAKI,UAAU,oBAAf,WACI,kBAAOA,UAAU,kBAAkBJ,KAAK,WAAWF,SAAUA,EAAUG,MAAO5B,EAAMO,SAAU6B,KAAK,WAAWC,YAAY,cAC1H,kBAAON,UAAU,kBAAkBK,KAAK,WAAWT,KAAK,kBAAkBF,SAAUA,EAAUG,MAAO5B,EAAMQ,gBAAiB6B,YAAY,wBAG3IxB,EAAMW,OAAS,GAAI,cAAGO,UAAU,kBAAb,SAAgClB,IAAa,MACjE,SAAC,KAAD,CAAMyB,GAAG,iBAAiBP,UAAU,mBAApC,qCACA,mBAAQA,UAAU,eAAlB,mCAlBG","sources":["components/auth/resetPassword.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport GoogleIcon from '@mui/icons-material/Google';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { finishReset, getReset } from '../../actions/auth';\r\nimport axios from 'axios';\r\n\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\n\r\nconst ResetPassword = (props) => {\r\n    const [state, setState] = React.useState({\r\n        password: \"\", confirmPassword: \"\", exists: false, user: {}, profile: {}\r\n    });\r\n    const [alert, setAlert] = React.useState(\"\");\r\n    const { id } = useParams();\r\n    useEffect(() => {\r\n        (async () => {\r\n            const { user, profile } = await getReset(id);\r\n            setState(state => ({ ...state, user, profile, exists: true }));\r\n        })();\r\n    }, []);\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault();\r\n        if (state.password.length < 8) {\r\n            setAlert(\"*Your password should be at least 8 characters long\")\r\n            return;\r\n        }\r\n        if (state.password !== state.confirmPassword) {\r\n            setAlert(\"*Your passwords don't match\")\r\n            return;\r\n        }\r\n        try {\r\n            await props.reset({ password: state.password, id })\r\n            navigate('/')\r\n        }\r\n        catch (err) {\r\n            setAlert(err);\r\n        }\r\n\r\n    }\r\n    const onChange = (e) => {\r\n        setState(state => ({ ...state, [e.target.name]: e.target.value }));\r\n    }\r\n    console.log(props.state)\r\n    if (!state.exists) {\r\n        return <div>404 </div>\r\n    }\r\n    return (<div className=\"auth\">\r\n        <h1 className=\"auth-header\">Reset Password</h1>\r\n        <form onSubmit={onSubmit} className=\"auth-form\" autoComplete=\"no\" >\r\n\r\n            <p className=\"auth-form-title-2\">Enter a new password</p>\r\n            <div className=\"auth-form-user\">\r\n                <img src={state.profile.picture} alt={state.profile.name} />\r\n                <p>{state.profile.name}</p>\r\n            </div>\r\n            <div className=\"auth-form-content\">\r\n                <input className=\"auth-form-input\" name=\"password\" onChange={onChange} value={state.password} type=\"password\" placeholder=\"Password\" />\r\n                <input className=\"auth-form-input\" type=\"password\" name=\"confirmPassword\" onChange={onChange} value={state.confirmPassword} placeholder=\"Confirm Password\" />\r\n            </div>\r\n\r\n            {alert.length > 0 ? <p className=\"auth-form-alert\">{alert}</p> : null}\r\n            <Link to=\"/profile/login\" className=\"auth-form-forgot\">Want to login instead?</Link>\r\n            <button className=\"button-large\">Reset Password</button>\r\n        </form>\r\n    </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst mapDispatch = (dispatch) => {\r\n    return {\r\n        reset: async (options) => await finishReset(dispatch, options)\r\n    }\r\n}\r\nexport default connect((state) => { return { state: state } }, mapDispatch)(ResetPassword)"],"names":["connect","state","dispatch","reset","options","finishReset","props","React","password","confirmPassword","exists","user","profile","setState","alert","setAlert","id","useParams","useEffect","getReset","navigate","useNavigate","onSubmit","e","preventDefault","length","onChange","target","name","value","console","log","className","autoComplete","src","picture","alt","type","placeholder","to"],"sourceRoot":""}