{"version":3,"file":"static/js/95.25383e3d.chunk.js","mappings":"0NAyFA,WAAeA,EAAAA,EAAAA,KAAQ,SAACC,GAAY,MAAO,CAAEA,MAAOA,MALhC,SAACC,GACjB,MAAO,CACHC,iBAAiB,WAAD,8BAAE,WAAOC,GAAP,uFAAyBD,EAAAA,EAAAA,IAAiBD,EAAUE,GAApD,mFAAF,mDAAC,MAGzB,EAhFgC,SAACC,GAC7B,MAA0BC,EAAAA,SAAe,CACrCC,SAAU,GAAIC,gBAAiB,GAAIC,QAAQ,EAAOC,OAAQ,KAD9D,eAAOT,EAAP,KAAcU,EAAd,KAGA,EAA0BL,EAAAA,SAAe,IAAzC,eAAOM,EAAP,KAAcC,EAAd,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,IACRE,EAAAA,EAAAA,YAAU,YACN,uBAAC,mHAE4BC,EAAAA,EAAAA,IAAUH,GAFtC,QAEaJ,EAFb,SAKWC,GAAS,SAAAV,GAAK,yBAAUA,GAAV,IAAiBS,OAAAA,EAAQD,QAAQ,OAL1D,sGAAD,KAYD,IACH,IAAMS,GAAWC,EAAAA,EAAAA,MACXC,EAAQ,yCAAG,WAAOC,GAAP,yEAEbA,EAAEC,mBACErB,EAAMM,SAASgB,OAAS,GAHf,uBAITV,EAAS,uDAJA,6BAOTZ,EAAMM,WAAaN,EAAMO,gBAPhB,uBAQTK,EAAS,+BARA,oDAaHR,EAAMF,iBAAiB,CAAEI,SAAUN,EAAMM,SAAUO,GAAAA,EAAIU,KAAMvB,EAAMS,OAAOc,OAbvE,QAcTN,EAAS,KAdA,kDAiBTL,EAAS,EAAD,IAjBC,0DAAH,sDAqBRY,EAAW,SAACJ,GACdV,GAAS,SAAAV,GAAK,yBAAUA,GAAV,cAAkBoB,EAAEK,OAAOF,KAAOH,EAAEK,OAAOC,YAG7D,OADAC,QAAQC,IAAIxB,EAAMJ,OACbA,EAAMQ,QAIC,iBAAKqB,UAAU,OAAf,WACJ,eAAIA,UAAU,cAAd,6BACA,kBAAMV,SAAUA,EAAUU,UAAU,YAAYC,aAAa,KAA7D,WAEI,cAAGD,UAAU,oBAAb,+BACA,iBAAKA,UAAU,iBAAf,WACI,gBAAKE,IAAK/B,EAAMS,OAAOuB,MAAOC,IAAKjC,EAAMS,OAAOc,QAChD,uBAAIvB,EAAMS,OAAOc,WAErB,iBAAKM,UAAU,oBAAf,WACI,kBAAOA,UAAU,kBAAkBN,KAAK,WAAWC,SAAUA,EAAUE,MAAO1B,EAAMM,SAAU4B,KAAK,WAAWC,YAAY,cAC1H,kBAAON,UAAU,kBAAkBK,KAAK,WAAWX,KAAK,kBAAkBC,SAAUA,EAAUE,MAAO1B,EAAMO,gBAAiB4B,YAAY,wBAE3IxB,EAAMW,OAAS,GAAI,cAAGO,UAAU,kBAAb,SAAgClB,IAAa,MACjE,iBAAMkB,UAAU,sBAChB,mBAAQA,UAAU,eAAlB,0CAlBD","sources":["components/auth/createFromGoogle.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport GoogleIcon from '@mui/icons-material/Google';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { createFromGoogle, getSocial } from '../../actions/auth';\r\nimport axios from 'axios';\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\n\r\n\r\nconst CreateAccountFromGoogle = (props) => {\r\n    const [state, setState] = React.useState({\r\n        password: \"\", confirmPassword: \"\", exists: false, social: {}\r\n    });\r\n    const [alert, setAlert] = React.useState(\"\");\r\n    const { id } = useParams();\r\n    useEffect(() => {\r\n        (async () => {\r\n            try {\r\n                const social = await getSocial(id);\r\n                if (social) {\r\n\r\n                    setState(state => ({ ...state, social, exists: true }));\r\n                }\r\n            }\r\n            catch (err) {\r\n\r\n            }\r\n        })();\r\n    }, []);\r\n    const navigate = useNavigate();\r\n    const onSubmit = async (e) => {\r\n\r\n        e.preventDefault();\r\n        if (state.password.length < 8) {\r\n            setAlert(\"*Your password should be at least 8 characters long\")\r\n            return;\r\n        }\r\n        if (state.password !== state.confirmPassword) {\r\n            setAlert(\"*Your passwords don't match\")\r\n            return;\r\n        }\r\n        try {\r\n            // console.log(this.state);\r\n            await props.createFromGoogle({ password: state.password, id, name: state.social.name })\r\n            navigate('/');\r\n        }\r\n        catch (err) {\r\n            setAlert(err);\r\n        }\r\n\r\n    }\r\n    const onChange = (e) => {\r\n        setState(state => ({ ...state, [e.target.name]: e.target.value }));\r\n    }\r\n    console.log(props.state)\r\n    if (!state.exists) {\r\n        return <div>404 </div>\r\n    }\r\n    else {\r\n        return (<div className=\"auth\">\r\n            <h1 className=\"auth-header\">Create Account</h1>\r\n            <form onSubmit={onSubmit} className=\"auth-form\" autoComplete=\"no\" >\r\n\r\n                <p className=\"auth-form-title-2\">Enter a password</p>\r\n                <div className=\"auth-form-user\">\r\n                    <img src={state.social.image} alt={state.social.name} />\r\n                    <p>{state.social.name}</p>\r\n                </div>\r\n                <div className=\"auth-form-content\">\r\n                    <input className=\"auth-form-input\" name=\"password\" onChange={onChange} value={state.password} type=\"password\" placeholder=\"Password\" />\r\n                    <input className=\"auth-form-input\" type=\"password\" name=\"confirmPassword\" onChange={onChange} value={state.confirmPassword} placeholder=\"Confirm Password\" />\r\n                </div>\r\n                {alert.length > 0 ? <p className=\"auth-form-alert\">{alert}</p> : null}\r\n                <span className=\"auth-form-forgot\"></span>\r\n                <button className=\"button-large\">Complete Registration</button>\r\n            </form>\r\n        </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nconst mapDispatch = (dispatch) => {\r\n    return {\r\n        createFromGoogle: async (options) => await createFromGoogle(dispatch, options)\r\n    }\r\n}\r\nexport default connect((state) => { return { state: state } }, mapDispatch)(CreateAccountFromGoogle)"],"names":["connect","state","dispatch","createFromGoogle","options","props","React","password","confirmPassword","exists","social","setState","alert","setAlert","id","useParams","useEffect","getSocial","navigate","useNavigate","onSubmit","e","preventDefault","length","name","onChange","target","value","console","log","className","autoComplete","src","image","alt","type","placeholder"],"sourceRoot":""}