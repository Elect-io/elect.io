{"version":3,"file":"static/js/203.b792dc69.chunk.js","mappings":"gNAkEA,WAAeA,EAAAA,EAAAA,KAAQ,SAACC,GAAY,MAAO,CAAEA,MAAOA,MALhC,SAACC,GACjB,MAAO,CACHC,qBAAqB,WAAD,8BAAE,WAAOC,GAAP,uFAAyBD,EAAAA,EAAAA,IAAqBD,EAAUE,GAAxD,mFAAF,mDAAC,MAG7B,EA1D6B,SAACC,GAC1B,MAA0BC,EAAAA,SAAe,CACrCC,SAAU,GAAIC,gBAAiB,GAAIC,QAAQ,EAAOC,OAAQ,KAD9D,eAAOT,EAAP,KAAcU,EAAd,KAIMC,GAAWC,EAAAA,EAAAA,MACTC,GAAOC,EAAAA,EAAAA,MAAPD,IACRE,EAAAA,EAAAA,YAAU,YACN,uBAAC,mHAE4BC,EAAAA,EAAAA,IAAUH,GAFtC,QAEaJ,EAFb,SAIWC,GAAS,SAAAV,GAAK,yBAAUA,GAAV,IAAiBS,OAAAA,EAAQD,QAAQ,OAJ1D,sGAAD,KAWD,IAEH,IAAMS,EAAQ,yCAAG,WAAOC,GAAP,6EACbA,EAAEC,iBADW,SAEPf,EAAMF,qBAAqBW,GAFpB,OAGbF,EAAS,KAHI,2CAAH,sDAQd,OADAS,QAAQC,IAAIjB,EAAMJ,OACbA,EAAMQ,QAIC,iBAAKc,UAAU,OAAf,WACJ,eAAIA,UAAU,cAAd,0DACA,iBAAKL,SAAUA,EAAUK,UAAU,YAAYC,aAAa,KAA5D,WAEI,cAAGD,UAAU,uBACb,iBAAKA,UAAU,iBAAf,WACI,gBAAKE,IAAKxB,EAAMS,OAAOgB,MAAOC,IAAK1B,EAAMS,OAAOkB,QAChD,uBAAI3B,EAAMS,OAAOkB,WAGrB,mBAAQC,QAASX,EAAUK,UAAU,eAArC,2CAbD","sources":["components/auth/merge.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport GoogleIcon from '@mui/icons-material/Google';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { connectGoogleAccount, getSocial } from '../../actions/auth';\r\nimport axios from 'axios';\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\n\r\nconst ConnectGoogleAccount = (props) => {\r\n    const [state, setState] = React.useState({\r\n        password: \"\", confirmPassword: \"\", exists: false, social: {}\r\n    });\r\n\r\n    const navigate = useNavigate();\r\n    const { id } = useParams();\r\n    useEffect(() => {\r\n        (async () => {\r\n            try {\r\n                const social = await getSocial(id);\r\n                if (social) {\r\n                    setState(state => ({ ...state, social, exists: true }));\r\n                }\r\n            }\r\n            catch (err) {\r\n\r\n            }\r\n        })();\r\n    }, []);\r\n\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault();\r\n        await props.connectGoogleAccount(id);\r\n        navigate('/')\r\n\r\n    }\r\n\r\n    console.log(props.state)\r\n    if (!state.exists) {\r\n        return <div>404 </div>\r\n    }\r\n    else {\r\n        return (<div className=\"auth\">\r\n            <h1 className=\"auth-header\">Do you want to connect your google account?</h1>\r\n            <div onSubmit={onSubmit} className=\"auth-form\" autoComplete=\"no\" >\r\n\r\n                <p className=\"auth-form-title-2\"></p>\r\n                <div className=\"auth-form-user\">\r\n                    <img src={state.social.image} alt={state.social.name} />\r\n                    <p>{state.social.name}</p>\r\n                </div>\r\n\r\n                <button onClick={onSubmit} className=\"button-large\">Connect Google Account</button>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nconst mapDispatch = (dispatch) => {\r\n    return {\r\n        connectGoogleAccount: async (options) => await connectGoogleAccount(dispatch, options)\r\n    }\r\n}\r\nexport default connect((state) => { return { state: state } }, mapDispatch)(ConnectGoogleAccount)"],"names":["connect","state","dispatch","connectGoogleAccount","options","props","React","password","confirmPassword","exists","social","setState","navigate","useNavigate","id","useParams","useEffect","getSocial","onSubmit","e","preventDefault","console","log","className","autoComplete","src","image","alt","name","onClick"],"sourceRoot":""}